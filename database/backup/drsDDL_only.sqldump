-- MySQL dump 10.13  Distrib 5.7.21, for Win64 (x86_64)
--
-- Host: drsharvard.c5ewwyfxyijg.us-east-1.rds.amazonaws.com    Database: drs
-- ------------------------------------------------------
-- Server version	5.6.37-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `drs`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `drs` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `drs`;

--
-- Temporary table structure for view `AllReadyWorks`
--

DROP TABLE IF EXISTS `AllReadyWorks`;
/*!50001 DROP VIEW IF EXISTS `AllReadyWorks`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `AllReadyWorks` AS SELECT 
 1 AS `volumeId`,
 1 AS `Volume`,
 1 AS `workId`,
 1 AS `WorkName`,
 1 AS `HOLLIS`,
 1 AS `OutlineOSN`,
 1 AS `PrintMasterOSN`,
 1 AS `DRSid`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `BatchBuilds`
--

DROP TABLE IF EXISTS `BatchBuilds`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BatchBuilds` (
  `idBatchBuilds` int(11) NOT NULL AUTO_INCREMENT,
  `BuildDate` datetime DEFAULT NULL,
  `Result` varchar(45) DEFAULT NULL,
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `volumeId` int(11) NOT NULL,
  `QueuedDate` datetime DEFAULT NULL COMMENT 'The date that the volume was requested to be built. Set in GetReadyVolumesByWorkId',
  `buildPathId` int(11) DEFAULT NULL,
  PRIMARY KEY (`idBatchBuilds`),
  UNIQUE KEY `volumeId_UNIQUE` (`volumeId`),
  KEY `batchVolume_idx` (`volumeId`),
  KEY `batchBuildPath_idx` (`buildPathId`),
  CONSTRAINT `batchBuildPath` FOREIGN KEY (`buildPathId`) REFERENCES `BuildPaths` (`buildPathId`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `batchVolume` FOREIGN KEY (`volumeId`) REFERENCES `Volumes` (`volumeId`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=8988 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `BuildPaths`
--

DROP TABLE IF EXISTS `BuildPaths`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `BuildPaths` (
  `buildPathId` int(11) NOT NULL AUTO_INCREMENT,
  `BuildPath` varchar(255) NOT NULL,
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`buildPathId`),
  UNIQUE KEY `BuildPaths_UNIQUE` (`BuildPath`)
) ENGINE=InnoDB AUTO_INCREMENT=3070 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `DRS`
--

DROP TABLE IF EXISTS `DRS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DRS` (
  `DRSid` int(11) NOT NULL AUTO_INCREMENT,
  `IngestDate` datetime DEFAULT NULL,
  `objectid` varchar(45) DEFAULT NULL COMMENT 'HUL Generated OBJ-ID',
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `DRSdir` varchar(45) DEFAULT NULL,
  `objectUrn` varchar(45) DEFAULT NULL,
  `filesCount` int(11) DEFAULT NULL,
  `size` bigint(20) DEFAULT NULL,
  `OSN` varchar(45) DEFAULT NULL,
  `volumeId` int(11) DEFAULT NULL,
  PRIMARY KEY (`DRSid`),
  UNIQUE KEY `DRS_DRSid_uindex` (`DRSid`),
  UNIQUE KEY `volumeId_UNIQUE` (`volumeId`),
  UNIQUE KEY `OSN_UNIQUE` (`OSN`),
  KEY `DRSVolume_idx` (`volumeId`),
  CONSTRAINT `DRSVolume` FOREIGN KEY (`volumeId`) REFERENCES `Volumes` (`volumeId`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=11242 DEFAULT CHARSET=latin1 COMMENT='Corresponds to our data structures and to output/BDRCCun';
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`bdrc`@`%`*/ /*!50003 TRIGGER `drs`.`DRS_BI_SET_VOL` BEFORE INSERT ON `DRS` FOR EACH ROW
BEGIN
	set new.volumeId = (select volumeId from Volumes where label = new.OSN);
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`bdrc`@`%`*/ /*!50003 TRIGGER `drs`.`DRS_BU_SET_VOL` BEFORE UPDATE ON `DRS` FOR EACH ROW
BEGIN
	set new.volumeId = (select volumeId from Volumes where label = new.OSN);
    set new.update_time = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Outlines`
--

DROP TABLE IF EXISTS `Outlines`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Outlines` (
  `outlineId` int(11) NOT NULL AUTO_INCREMENT,
  `workId` int(11) NOT NULL,
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `outlineText` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `idBatchStatus` int(11) DEFAULT NULL,
  `OSN` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`outlineId`),
  UNIQUE KEY `workId_UNIQUE` (`workId`),
  UNIQUE KEY `Outlines_OSN_uindex` (`OSN`),
  KEY `OutlineToWork_idx` (`workId`),
  CONSTRAINT `OutlineToWork` FOREIGN KEY (`workId`) REFERENCES `Works` (`workId`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1780 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PrintMasters`
--

DROP TABLE IF EXISTS `PrintMasters`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PrintMasters` (
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `PrintMasterId` int(11) NOT NULL AUTO_INCREMENT,
  `workId` int(11) NOT NULL,
  `Path` varchar(255) DEFAULT NULL,
  `idBatchStatus` int(11) DEFAULT NULL,
  `OSN` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`PrintMasterId`),
  UNIQUE KEY `PrintMasters_OSN_uindex` (`OSN`),
  KEY `idBatchStatus_idx` (`idBatchStatus`)
) ENGINE=InnoDB AUTO_INCREMENT=282 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`bdrc`@`%`*/ /*!50003 TRIGGER `drs`.`PrintMasters_BEFORE_UPDATE` BEFORE UPDATE ON `PrintMasters` FOR EACH ROW
BEGIN
	set new.update_time = CURRENT_TIMESTAMP;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Temporary table structure for view `ReadyWorksNeedsBuilding`
--

DROP TABLE IF EXISTS `ReadyWorksNeedsBuilding`;
/*!50001 DROP VIEW IF EXISTS `ReadyWorksNeedsBuilding`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `ReadyWorksNeedsBuilding` AS SELECT 
 1 AS `workId`,
 1 AS `Volume`,
 1 AS `WorkName`,
 1 AS `HOLLIS`,
 1 AS `OutlineOSN`,
 1 AS `PrintMasterOSN`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `Volumes`
--

DROP TABLE IF EXISTS `Volumes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Volumes` (
  `volumeId` int(11) NOT NULL AUTO_INCREMENT,
  `workId` int(11) DEFAULT NULL,
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `label` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`volumeId`),
  UNIQUE KEY `volumeId_UNIQUE` (`volumeId`),
  UNIQUE KEY `label_UNIQUE` (`label`),
  KEY `VolToWork_idx` (`workId`),
  CONSTRAINT `VolToWork` FOREIGN KEY (`workId`) REFERENCES `Works` (`workId`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=32528 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Works`
--

DROP TABLE IF EXISTS `Works`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Works` (
  `workId` int(11) NOT NULL AUTO_INCREMENT,
  `WorkName` varchar(45) DEFAULT NULL,
  `HOLLIS` varchar(45) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`workId`),
  UNIQUE KEY `workId_UNIQUE` (`workId`),
  UNIQUE KEY `WorkName_UNIQUE` (`WorkName`)
) ENGINE=InnoDB AUTO_INCREMENT=51638 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping routines for database 'drs'
--
/*!50003 DROP PROCEDURE IF EXISTS `AddDRS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `AddDRS`(
  IngestDate datetime
  ,  objectid varchar(45) 
  , objectUrn varchar(45)
  , DRSdir varchar(45) 
  , filesCount int(11) 
  , size bigint(20)
  , OSN varchar(45)
  )
BEGIN
  
INSERT INTO `drs`.`DRS`
(
`IngestDate`,
`objectid`,
`DRSdir`,
`objectUrn`,
`filesCount`,
`size`,
`OSN`)
VALUES
(
  IngestDate 
  ,  objectid 
  , DRSdir
  , objectUrn  
  , filesCount
  , size
  , OSN 
  )
  on duplicate key update
  `IngestDate` = IngestDate,
`objectid` = objectid,
`DRSdir`= DRSdir,
`objectUrn`= objectUrn,
`filesCount` = filesCount,
`size` = size,
`OSN` = OSN ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `AddOutline` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `AddOutline`(workName varchar(45))
    COMMENT 'Creates an outline row. Looks up the workName, adds it if not exists '
BEGIN


-- The work might not be in the db yet
if not exists (select workId from Works w where w.workName = workName) then
BEGIN
	call AddWork(workName,NULL);
END;
END IF;

select workName;

insert into Outlines(workId) values
((select workId from Works w where w.workName = workName)) 
-- jsk: temporarily defeat load on duplicate key update outlineText = outlineText;
on duplicate key update workId = workId ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `AddPrintMaster` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `AddPrintMaster`(workName varchar(45),pmPaths varchar(255))
BEGIN

-- The work might not be in the db yet
if not exists (select workId from Works w where w.workName = workName) then
BEGIN
	insert into Works(workName) values(workName);
	insert into PrintMasters(workId,Path) values (last_insert_id(),pmPaths);
END;
else
-- the work exists

insert into PrintMasters(workId,Path) values
((select workId from Works w where w.workName = workName), pmPaths) 
on duplicate key update workId = workId ;
END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `AddVolume` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `AddVolume`(workName varchar(45), srcLabel varchar(45))
BEGIN


-- The work might not be in the db yet
if not exists (select workId from Works w where w.workName = workName) then
BEGIN
	insert into Works(workName) values(workName);
	insert into Volumes(workId, label) values (last_insert_id(),srcLabel);
END;
else
-- the work exists

insert into Volumes(workId, label) values
((select workId from Works w where w.workName = workName), srcLabel) 
-- jsk: temporarily defeat load on duplicate key update outlineText = outlineText;
on duplicate key update workId = workId ;
END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `AddWork` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `AddWork`(workName varchar(45), pHOLLIS varchar(45))
    COMMENT 'Creates a work, or updates its HOLLIS. Looks up the workName, adds it if not exists '
BEGIN

set @oHOLLIS = (select HOLLIS from Works w where workName = w.WorkName) ;
set @NuHollis = COALESCE(pHOLLIS,@oHollis);
insert into drs.Works(WorkName,HOLLIS) values (workName,@NuHollis)  on duplicate key update HOLLIS = @NuHollis ; --  if (values(HOLLIS) is not NULL , VALUES(HOLLIS), HOLLIS ) ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `CountWorksByChildren` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `CountWorksByChildren`()
BEGIN
set  @AllWorksCount = ( select count(*) from drs.Works);

set @WorksPrintOROutline = (select count(*) from drs.Works w left outer join drs.Outlines o using (workId) left outer join drs.PrintMasters p using (workId) where p.PrintMasterId is  not null or  o.outLineId is not null);

set @WorksNoOutlineNoPrint = (select count(*) from drs.Works w left outer join drs.Outlines o using (workId) left outer join drs.PrintMasters p using (workId) where p.PrintMasterId is  null and o.outLineId is null);

set @WorksNoOutline =  (select count(*) from drs.Works w left outer join drs.Outlines o using (workId) where o.outlineId is null);

set @WorksWithOutlineIJ=  (select count(*) from drs.Works w inner join drs.Outlines o using (workId));

set @WorksNoPrintLO =  (select count(*) from drs.Works w left outer join drs.PrintMasters p using (workId) where p.PrintMasterId is null);


set @WorksPrintIJ=  (select count(*) from drs.Works w inner join drs.PrintMasters p using (workId) );

set @WorksBothPrintOutlineIJ   =(select count(*) from drs.Works w inner join drs.Outlines o using (workId) inner join drs.PrintMasters p using (workId) );


SELECT 
    @AllWorksCount,
    @WorksPrintOROutline,
    @WorksNoOutlineNoPrint,
    @WorksNoOutline,
    @WorksWithOutlineIJ,
    @WorksNoPrintLO,
    @WorksPrintIJ,
    @WorksBothPrintOutlineIJ;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `GetReadyVolumes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `GetReadyVolumes`(fetchBatch int(11))
    COMMENT 'Return the Readyworks for the input workId. Can return up to fetchBatch result sets'
BEGIN

-- --------------  DECLARATIONS ---------------------
declare done boolean default 0;
declare thisWork integer(11);

declare worksC cursor for 
select * from tWork;

declare continue handler for SQLSTATE '02000' set done=1;

-- -------------- DO_REAL_WORK
drop table if exists tVol;
drop table if exists tWork;

Create temporary table tVol ( volumeId int(11));
Create temporary table tWork ( workId int(11));

insert into tWork 
	select distinct workId from ReadyWorksNeedsBuilding r
	inner join Volumes v using (workId)
    left  join BatchBuilds bb using (volumeId)
    where bb.QueuedDate is null
    order by r.workId asc 
    limit fetchBatch ;


open worksC;

read_loop: LOOP
	fetch worksC into thisWork;
    if done = 1 then 
		leave read_loop;
	end if;
	select * from ReadyWorksNeedsBuilding where workId = thisWork;
END LOOP;

close worksC;

 
insert into BatchBuilds(volumeId,QueuedDate) 
select volumeId, CURRENT_TIMESTAMP as QueuedDate from Volumes inner join tWork using (workId) 
on duplicate key update QueuedDate = current_time;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `GetReadyVolumesByWorkId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `GetReadyVolumesByWorkId`(workIdParam int(11))
    COMMENT 'Return the Readyworks for the input workId'
BEGIN

drop table if exists tVol;

Create temporary table tVol ( volumeId int(11));

insert tVol select volumeId from Volumes 
inner join Works w using (workId)
where w.workId = workIdParam; 

insert BatchBuilds (volumeId, QueuedDate) select volumeId, CURRENT_TIME from tVol
on duplicate key update QueuedDate = current_time;

select * from ReadyWorksNeedsBuilding where workId = workIdParam;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `UpdateBatchBuild` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `UpdateBatchBuild`(batchVolume varchar(45),batchBuildPath varchar(255), buildDate datetime, result varchar(45))
BEGIN

insert ignore BuildPaths ( `BuildPath`) values (batchBuildPath) ;

select volumeId into @vol from Volumes where label = batchVolume;

select   buildPathId into @bp from BuildPaths where BuildPath = batchBuildPath ;

insert BatchBuilds
(
`volumeId`
,`BuildDate`
,`Result`
,`buildPathId`)
VALUES
(
 @vol
  , buildDate
  , result
  , @bp
  )
  on duplicate key update
 `buildPathId`  =  @bp 
,`BuildDate` = buildDate
,`Result` = result;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `WeeklyStatus` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`bdrc`@`%` PROCEDURE `WeeklyStatus`()
BEGIN
set @objects = (SELECT count(1) FROM drs.DRS);
set @batches = (select count(distinct DRSDir) from drs.DRS);
set @completeUploads = (
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++    */
/* 			GET WORKS WITH NO MISSING UPLOADS                   */
select count(distinct workName) -- ,  HOLLIS
  -- , (select count(1) from Volumes v where v.workId = w.WorkId) vpw,
  -- (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId) vd
from Works w
  -- get rid of works with outlines and print masters
    left outer join drs.Outlines o using (workId) left outer join drs.PrintMasters p using (workId)
    inner join Volumes v using (workId)

    where w.HOLLIS is not null
          and p.PrintMasterId is  null
          and o.outLineId is  null
    and
    (select count(1) from Volumes v where v.workId = w.WorkId)
          -- = here means everything uploaded if its not 0
          =
     (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId)
 --  and WorkName like '%art%'
-- where
and   (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId) <> 0
) ; -- group by workName;

set @partialUploads = (
select count(distinct workName) -- ,  HOLLIS
  -- , (select count(1) from Volumes v where v.workId = w.WorkId) vpw,
  -- (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId) vd
from Works w
  -- get rid of works with outlines and print masters
    left outer join drs.Outlines o using (workId) left outer join drs.PrintMasters p using (workId)
    inner join Volumes v using (workId)

    where w.HOLLIS is not null
          and p.PrintMasterId is  null
          and o.outLineId is  null
    and
    (select count(1) from Volumes v where v.workId = w.WorkId)
          -- = here means everything uploaded if its not 0
          <>
     (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId)
 --  and WorkName like '%art%'
-- include only the volumes that have some uploads
and   (select count(1) from Volumes v left join DRS d using (volumeId) where d.DRSid is not null and v.workId = w.workId) <> 0
) ; -- group by workName;


select @batches,@objects, @completeUploads,@partialUploads, sum(filesCount) as CumCount, sum(size) as CumSize from drs.DRS;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `drs`
--

USE `drs`;

--
-- Final view structure for view `AllReadyWorks`
--

/*!50001 DROP VIEW IF EXISTS `AllReadyWorks`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`bdrc`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `AllReadyWorks` AS select distinct `v`.`volumeId` AS `volumeId`,`v`.`label` AS `Volume`,`w`.`workId` AS `workId`,`w`.`WorkName` AS `WorkName`,`w`.`HOLLIS` AS `HOLLIS`,`o`.`OSN` AS `OutlineOSN`,`p`.`OSN` AS `PrintMasterOSN`,`DRS`.`DRSid` AS `DRSid` from ((((((`Works` `w` left join `Outlines` `o` on((`w`.`workId` = `o`.`workId`))) left join `PrintMasters` `p` on((`w`.`workId` = `p`.`workId`))) left join `PrintMasters` `prn` on((`prn`.`workId` = `w`.`workId`))) left join `Outlines` `outs` on((`outs`.`workId` = `w`.`workId`))) left join `Volumes` `v` on((`v`.`workId` = `w`.`workId`))) left join `DRS` on((`v`.`volumeId` = `DRS`.`volumeId`))) where (isnull(`p`.`PrintMasterId`) and isnull(`o`.`outlineId`) and (`v`.`volumeId` is not null) and isnull(`DRS`.`DRSid`) and (`w`.`HOLLIS` is not null)) order by `w`.`WorkName` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `ReadyWorksNeedsBuilding`
--

/*!50001 DROP VIEW IF EXISTS `ReadyWorksNeedsBuilding`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`bdrc`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `ReadyWorksNeedsBuilding` AS select distinct `arw`.`workId` AS `workId`,`arw`.`Volume` AS `Volume`,`arw`.`WorkName` AS `WorkName`,`arw`.`HOLLIS` AS `HOLLIS`,`arw`.`OutlineOSN` AS `OutlineOSN`,`arw`.`PrintMasterOSN` AS `PrintMasterOSN` from (`AllReadyWorks` `arw` left join `DRS` on((`arw`.`volumeId` = `DRS`.`volumeId`))) where isnull(`DRS`.`DRSid`) order by `arw`.`WorkName` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-06-27 13:35:34
